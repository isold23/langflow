name: Langflow Pre-release

on:
  pull_request:
    types:
      - closed
    branches:
      - dev
    paths:
      - "pyproject.toml"
  workflow_dispatch:
    inputs:
      force_release:
        description: "Force a release"
        required: false
        default: "false"
  workflow_run:
    workflows: ["pre-release-base"]
    types: [completed]
    branches: [dev]

env:
  POETRY_VERSION: "1.8.2"

jobs:
  if_release:
    if: ${{ (github.event.pull_request.merged == true) && contains(github.event.pull_request.labels.*.name, 'pre-release') }} || ${{ github.event_name == 'workflow_dispatch' && inputs.force_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install poetry
        run: pipx install poetry==$POETRY_VERSION
      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Check Version
        id: check-version
        run: |
          version=$(cd src/backend/base && poetry version --short)
          last_released_version=$(curl -s "https://pypi.org/pypi/langflow/json" | jq -r '.releases | keys | .[]' | sort -V | tail -n 1)
          if [ "$version" = "$last_released_version" ]; then
            echo "Version $version is already released. Skipping release."
            exit 1
          else
            echo version=$version >> $GITHUB_OUTPUT
          fi
      - name: Build project for distribution
        run: make build main=true
      - name: Display pyproject.toml langflow-base Version
        run: cat pyproject.toml | grep langflow-base
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          make publish main=true
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          generateReleaseNotes: true
          prerelease: true
          tag: v${{ steps.check-version.outputs.version }}
          commit: dev
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: ./build_and_push.Dockerfile
          tags: |
            logspace/langflow:${{ steps.check-version.outputs.version }}
            logspace/langflow:1.0-alpha
